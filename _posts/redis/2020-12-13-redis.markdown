---
layout: post
title:  "redis"
date:   2020-12-13
categories: redis
tag: redis
---

* content
{:toc}

# Redis

## 一、为什么使用redis

### 1、单机Mysql时代

![1607827591432](/images/2020-12/2020-12-13-redis/1607827591432.png)

90年代，一个网站的访问量一般不会太大，单个数据库完全够用。随着用户的增多，网站出现以下的问题

1. 数量增加到一定的程度，单机数据库就放不下了
2. 数据库索引（B+ Tree）一个机器的内存也放不下
3. 访问量变大后（读写混合），一台服务器承受不住

### 2、Memcached（缓存）+Mysql+垂直拆分（读写分离）

网站80%的情况都是在读，每次都要查询数据库的话就十分麻烦！所以说我们希望减轻数据库的压力，我们可以使用缓存来保证效率

![1607828015218](/images/2020-12/2020-12-13-redis/1607828015218.png)

优化过程经历了一下几个过程

1. 优化数据库的数据结构和索引（难度大）
2. 文件缓存，通过IO流获取比每次访问数据库的效率略高，但是流量爆炸式增长的时候，IO流也承受不了
3. MemCache,但是比较热门的技术，通过在数据库和数据库访问层之间加上一层缓存，第一次访问数据库的时候直接查询数据库，将结果保存到缓存，后续查询先检查缓存，若有则直接拿去使用，效率显著提升

### 3、分库分表+水平拆分+Mysql集群

![1607828426436](/images/2020-12/2020-12-13-redis/1607828426436.png)

### 4、如今最近的年代

如今信息量井喷式增长，各种各样的数据出现（用户定位数据，图片数据等），大数据的背景下关系型数据库（RDBMS）无法满足大量的数据要求。Nosql数据库就能轻松的解决这么多问题。

![1607829125923](/images/2020-12/2020-12-13-redis/1607829125923.png)

### 5、为什么要使用NoSQL?

用户的个人信息，社交网络，地理位置。用户自己产生的数据，用户日志等等爆发式增长！

这时候我们需要使用NoSQL数据库，NoSQL可以很好地处理以上这些情况！

### 6、什么是NoSQL

**==NoSQL = Not Only SQL** (不仅仅是SQL)

Not Ony Structured Query Language



关系型数据库：列+行，同一个表下数据的结构是一样的。

非关系型数据库：数据存储没有固定的格式，并且可以横向扩展。

NoSQL泛指非关系型数据库，随着web2.0互联网的诞生，传统的关系型数据库很难对付web2.0时代！尤其是大规模高并发的社区，暴露出来很多难以克服的问题，NoSQL在当今大数据环境下发展的十分迅速，Redis是发展最快的。

### NoSQL特点

1. 方便扩展（数据之间没有关系，很好扩展！）

2. 大数据量性能高（Redis一秒可以写8万次，读11万次，NoSQL的缓存记录级，是一种细粒度的缓存，性能会比较高！）

3. 数据类型是多样性的！（不需要事先设计数据库，随取随用）

4. 传统的RDBMS和NoSQL

   ```
   传统的RDBMS（关系型数据库）
   - 结构化组织
   - SQL
   - 数据和关系都存在单独的表中 row col
   - 操作，数据定义语言
   - 严格一致性
   - 基础的事务
   - ....
   ```

   ```
   NoSQL
   - 不仅仅是数据
   - 没有固定的查询语言
   - 键值对存储，列存储，文档储存，图形数据库（社交关系）
   - 最终一致性
   - CAP定理和BASE
   - 高性能，高可用，高扩展
   - ...
   ```

大数据时代的3V：主要是**描述问题**的

1. 海量Velume
2. 多样Variety
3. 实时Velocity

大数据时代的3高：主要是对程序的要求

1. 高并发
2. 高扩展
3. 高性能

真正在公司中的实践：MoSQL+RDBMS一起使用才是最强的

### NoSQL的四大分类

#### KV键值对

- 新浪：Redis
- 美团：Redis+Tair
- 阿里、百度：Redis+Memcache

#### 文档型数据库（bjson数据格式）

- **MongoDB**

  - 基于分布式文件存储的数据库。C++编写，用于处理大量的文档

  - MongoDB是RDBMS和NoSQL的中间产品。MongoDB是非关系型数据库中功能最丰富的，NoSQL中最像关系型数据库的数据库

- ConthDB

#### 列存储数据库

- HBase
- 分布式文件系统

#### 图关系数据库

- Neo4j、InfoGrid

| 分类                | Examples举例                                       | 典型应用场景                                                 | 数据模型                                  | 优点                                                         | 缺点                                                         |
| ------------------- | -------------------------------------------------- | ------------------------------------------------------------ | ----------------------------------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |
| 键值对（key-value） | Tokyo Cabinet/Tyrant, Redis, Voldemort, Oracle BDB | 内容缓存，主要用于处理大量数据的高访问负载，也用于一些日志系统等等 | key指向vale键值对，通常用hash table来实现 | 查找速度快                                                   | 数据无结构话，通常只被当做字符串或者二进制数据               |
| 列存储数据库        | Cassandra, HBase, Riak                             | 分布式文件系统                                               | 以列簇式存储，将同一列数据存储在一起      | 查找速度快，可扩展性强，更容易进行分布式扩展                 | 查询性能不高，而且缺乏统一的查询语法                         |
| 文档型数据库        | CouchDB, MongoDb                                   | Web应用（与key-value类似，value是结构化的，不同的是数据库能够了解value的内容） | key-value对应的键值对，value为结构化数据  | 数据格式要求不严格，表结构可变，不需要像关系型数据库一样需要预先定义表结构 | 查询性能不高，而且缺乏统一的查询语法                         |
| 图形数据库（Graph） | Neo4J, InfoGrid, Infinite Graph                    | 社交网络，推荐系统等。专注于构建关系图谱                     | 图结构                                    | 利用图结构相关算法。比如最短路径寻址，N度关系查找等          | 很多时候需要对整个图做计算才能得出需要的信息，而且这种结构不太好做分布式的集群 |

## 二、Redis入门

### 概述

#### Redis是什么？

Redis（Remote Dictionary Server），即远程字典服务。

是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、key-value数据库，并提供多种语言的API。与memcached一样，为了保证效率，数据都是缓存在缓存中。区别的是redis会周期性的把更新的数据写入磁盘后把修改操作写入追加的记录文件，并且在此基础上实现了master-slave（主从）同步。

#### Redis能干什么

1. 内存存储、持久化，内存是断点即失的，所以需要持久化（RDB\AOF）
2. 高效率、用于高速缓冲
3. 发布订阅系统
4. 地图信息分析
5. 计时器、计数器（eg:浏览量）
6. ...

#### 特性

1. 多样的数据类型
2. 持久化
3. 集群
4. 事务
5. ...

#### 环境搭建

官网：https://redis.io/

#### Windows安装

。。。

Linux安装

1. 下载安装包
2. 解压Redis安装包！放在/usr/ 目录下
3. 

#### 性能测试

**redis-benchmark** ：Redis官方提供的性能测试工具，参数选项如下：

redis性能测试工具可选参数如下所示：

