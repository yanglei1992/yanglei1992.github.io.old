---
layout: post
title:  "mysql储存引擎InnoDB与MyISAM"
date:   2019-01-05 18:20:15 +0800
categories: mysql
tag: innodb
---

* content
{:toc}

# 什么是储存引擎 #

&nbsp;&nbsp;&nbsp;&nbsp;MySQL中的数据用各种不同的技术储存在文件（或者内存）中。这些技术中的每一种技术都使用不同的储存机制、索引技巧、锁定水平并且最终提供广泛的不同功能和能力、通过选择不同的技术，你能够获得额外的速度或者功能，从而改善你的应用的整理功能。

&nbsp;&nbsp;&nbsp;&nbsp;例如:如果你在研究大量的临时数据，你也许需要使用内存MySql储存引擎。内存储存引擎能够在内存中储存所有的表格数据，又或者，你也需要一个支持事务处理的数据库（以确保事务处理不成功时数据的回退能力）。

&nbsp;&nbsp;&nbsp;&nbsp;这些不同的技术以及配套的相关功能在MySQL中被称为储存引擎（也被称作表类型）。MySQL默认配置了许多不同的储存引擎，可以预先设置或者在MySQL服务器中启用。你可以选择适用于服务器、数据库和表格的储存引擎，以便在选择如何存储你的信息、如何检索这些信息以及需要你的数据结合什么性能和功能的时候为你提供最大的灵活性。

# 关系型数据库的理解 #

&nbsp;&nbsp;&nbsp;&nbsp;关系型数据库表是用于储存和组织信息的数据机构，可以将表理解为有行和列组成的表格，类似于Excel的电子表格形式。有的表简单，有的表复杂，有的表根本不用来存储任何长期的数据，有的表读取时非常快，但是插入数据时却很差；而我们在实际开发过程中，就可能需要各种各样的表，不同的表，就意味着存储不同类型的数据，数据处理上也会存在着差异；那么，对于mysql来说，他提供了很多种类型的存储引擎（或者说不同的表类型），我们可以根据对数据处理的需求，选择不同的存储引擎，从而最大限度的利用MySQL强大的功能。

# mysql的存储存储引擎 #

可以同`show engines;`查看mysql的存储引擎

![install_step](/images/2019-01/2019-01-05-mysql-innodb-study/TL20190131095507.png)

## InnoDB ##
&nbsp;&nbsp;&nbsp;&nbsp;最常用的MySQL存储引擎之一，InnoD是一个健壮的事务型存储引擎，这种存储引擎已经被很多互联网公司使用，为用户操作非常大的数据库存储提供一个强大的解决方案。InnoDB一般作为安装MySQL默认的存储引擎。InnoDB还引入了行级锁和外键约束，在以下场合，使用InnoDB是最理想的选择：

- 更新密集的表：InnoDB存储引擎特别适合处理多重并发的更新请求。
- 事务：InnoDB存储引擎是支持事务的标准MySQL存储引擎。
- 自动灾难恢复：与其它存储引擎不同，InnoDB表能够自动从灾难中恢复。
- 外键约束：MySQL支持外键的存储过程只有InnoDB。
- 支持自动增加列AUTO_INCREMENT属性

总体来说：如果需要支持事务，并且有较高的并发读取频率，InnoDB是不错的选择。

## MyIASM ##
&nbsp;&nbsp;&nbsp;&nbsp;MyIASM不支持事务，也不支持外键，其特点是访问速度快，对事物没有要求或者以SELECT与INSERT为主的应用基本都可以使用这个引擎来创建表，每个MyIASM在磁盘上存储成三个文件，其中文件名和表名都相同，但扩展名分别为：

- .frm（储存表定义）
- MYD（MYDdata，存储数据）
- MYI（MYIndex，存储索引）

&nbsp;&nbsp;&nbsp;&nbsp;数据文件和索引文件可以防止在不同的目录，平均分配IO，获取更快的速度。要指定数据文件和索引文件的路径，需要在创建表的时候通过DATADIRECTORY和INDEX DIRECTORY语句指定，文件路径需要使用绝对路径。

&nbsp;&nbsp;&nbsp;&nbsp;每个MyIASM表都有一个标志，服务器或myiasamchk程序在检查MyIASM数据表时会对这个标志进行设置。MyIASM表还有一个标志用来表明该数据表在上次使用后是不是被正常关闭了。如果服务器以为宕机或者崩溃，这个标志可以用来判断数据表是否需要检查和修复。如果想让这种检查自动进行，可以在启动服务器时使用--myiasm-recover现象。这会让服服务器在每次打开一个MyIASM数据表时自动检查数据表的标志并进行必要的修复处理。MyIASM类型的表可能会损坏，可以使用CHECK TABLE语句来检查MyIASM表的健康，并用REPAIR TABLE语句修复一个损坏的MyIASM表。

&nbsp;&nbsp;&nbsp;&nbsp;MyIASM表还支持3中不同的存储格式：

- 静态（固定长度）表
- 动态表
- 压缩表

&nbsp;&nbsp;&nbsp;&nbsp;启动静态表是默认的存储格式。静态表中的字段都是非常长的字段，这样每个记录都是固定长度的，这种存储方式的有点是存储非常迅速，容易缓存，出现故障容易恢复；缺点是占用的空间通常比动态的多。静态表在数据存储时会根据列定义的宽度补足空格，但是在访问的时候并不会得到这些空格，这些空格在返回应用之前已经去掉。同时需要注意：在某些情况下可能需要返回字段后的空格，而使用这种格式时后面的空格会被自动处理掉。

&nbsp;&nbsp;&nbsp;&nbsp;动态表包含边长字段，记录不是固定长度的，这样存储的优点是占用的空间较少，但是频繁的更新记录会产生碎片，需要定期执行OPTMIZE TABLE语句或myiasmchk -r命令来改善性能，并且出现故障的时候恢复相对比较困难。

&nbsp;&nbsp;&nbsp;&nbsp;压缩表时由myiasmchk工具创建，占据非常小的空间，因为每条记录都是单独被压缩的，所以只有非常小的访问开支。

# 如何选择存储引擎 #
&nbsp;&nbsp;&nbsp;&nbsp;可以根据如下标准进行选择，选择标准可以分为：

- 是否需要支持事务
- 是否需要使用热备
- 崩溃恢复：能否接受崩溃
- 是否需要外键支持



# 参考资料 #

[https://www.cnblogs.com/andy6/p/5789248.html](https://www.cnblogs.com/andy6/p/5789248.html)

