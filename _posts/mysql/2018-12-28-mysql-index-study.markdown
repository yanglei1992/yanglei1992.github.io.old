---
layout: post
title:  "MySQL索引"
date:   2018-12-28 18:21:49 +0800
categories: mysql
tag: index
---

* content
{:toc}

# MySQL 索引简介 #
我所知道的 MySQL 索引： MySQL 索引的建立对于 MySQL 的高效运行时很重要的，索引可以大大的提高 MySQL 的检索速度。在MySQL中，所有的存储引擎每个表至少支持16个索引，总索引长度会少为256个字节，联合索引最多可包含16列。大多数储存引擎都有更高的限制。当然，索引不是越多越好，建立索引需要遵守一定的原则，否则可能适得其反。

# 添加索引的原则 #

## 哪些情况需要创建索引 ##

1. 主键自动建立主键索引 
2. 频繁作为查询条件的字段应该创建索引
3. 查询中与其他表关联的字段，外键关系建立索引
4. 查询中排序的字段，排序字段若通过索引去访问将大大提高排序速度
5. 查询中统计后者分组的字段应该创建索引

## 哪些情况不需要创建索引 ##

1. 表记录太少
2. 经常增删改的表
3. 数据重复且分布平均的表字段，例如性别字段

# 避免索引失效 #

1. 最佳左前缀法则，查询从索引的最左前列开始并且不跳过索引中的列
2. 不能在索引列上做任何操作（计算、函数、自动/手动类型转换），这些都会导致索引失效而转向全表扫描
3. 存储引擎不能使用索引中范围条件右边的列
4. 尽量使用覆盖索引（只访问索引的查询（索引列和查询列一致）），减少 select * 的使用
5. 在使用不等于( != 或者 <>) 的时候无法使用索引会导致全表扫描
6.  is null , is not null 也无法使用索引
7.  like 以通配符开头 ( like '%' ) 会是索引失效导致全表扫描
8.  字符串不加单引号索引失效
9.  少用 or 

# JOIN 优化 #

JOIN 语句优化的原则

1. 对被驱动表的 join 字段上建立索引；
2. 当被驱动表的 join 上无法建立索引的时候， 设置足够的 join buffer size。
 
# 常见索引原则有 #

1. 选择唯一性索引（ 唯一性索引的值是唯一的，可以更快速的通过该索引来确定某条记录。）
2. 为经常需要排序、分组和联合操作的字段建立索引：
3. 为常作为查询条件的字段建立索引。
4. 限制索引的数目（越多的索引，会使更新表变得很浪费时间）。
5. 尽量使用数据量少的索引（如果索引的值很长，那么查询的速度会受到影响。）
6. 尽量使用前缀来索引（如果索引字段的值很长，最好使用值的前缀来索引。）
7. 删除不再使用或者很少使用的索引
8. 最左前缀匹配原则，非常重要的原则。
9. 尽量选择区分度高的列作为索引（区分度的公式是表示字段不重复的比例）
10. 索引列不能参与计算，保持列“干净”：带函数的查询不参与索引。
11. 尽量的扩展索引，不要新建索引。


# 参考资料 #

[https://www.cnblogs.com/whgk/p/6179612.html](https://www.cnblogs.com/whgk/p/6179612.html)

